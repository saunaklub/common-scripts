#!/bin/bash

hash_cmd=sha512sum
digits=32

print_help() {
    cat <<EOF
pwgen - safe password generator

Usage: pwgen [−c hash_command] [−d output_digits] password
-c   Hash command (default sha512sum).
-d   Output digits (default 32).

Generate an output_digits-long prefix of a password hash, created by
passing 'password' to hash_command, and seperate the output into
blocks of 4 digits. The default output length is 32 hex digits, which
corresponds to 128 bits of entropy.

The program is intended for quick hashing of passwords and printing
the result in a readable form for entry in web forms and such. Please
note that the initial password you provide needs to be
cryptographically secure to begin with!
EOF
}

optstring=":c:d:"
while getopts $optstring opt ; do
    case $opt in
        c)  hash_cmd=$OPTARG ;;
        d)  digits=$OPTARG ;;
        ?)  print_help
            exit ;;
    esac
done
shift $(($OPTIND - 1))

echo -n $1 | $hash_cmd | cut -c -$digits | sed 's/..../& /g'
